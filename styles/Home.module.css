.video {   
    object-fit: cover;   
    width: 100%;
    height: 100%;
    position: fixed;
    z-index: -1; 
}

.mainText {
    color: #000000b4;
    margin: 0 auto;
    text-align: center;
    font-size: 8rem;
    font-style: italic;
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    /* animation: fadeIn 5s; */
    /* -webkit-animation: fadeIn ease 5s; */
    padding-bottom: 20px;
    width: 825px;
}
@-webkit-keyframes fadeIn {
    0% {opacity: 0;}
    100% {opacity: 1;}
 }
 
 @keyframes fadeIn {
    0% {opacity: 0;}
    100% {opacity: 1;}
 }
 
 .fadeIn {
    -webkit-animation-name: fadeIn;
    animation-name: fadeIn;
 }

 .subText {
    color: #000000af;
    margin: 0 auto;
    text-align: center;
    font-family: cursive;
    padding: 1.5rem;
    border-radius: 10px;
    width: 690px;
    font-size: 1.345rem;
 } 

 .rocket {
    position: relative;
    animation: animate .2s ease infinite;
    margin: 0 auto;
    display: flex;
    top: 100px;
    cursor: pointer;
    height: 150px;
    width: 80px;
 }

 .whatIs {
    color: #eef2f5c9;
    margin: 0 auto;
    text-align: center;
    padding: 1.5rem;
    display: flex;
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    animation: fadeIn 5s;
    -webkit-animation: fadeIn ease 5s;
 }

 .aboutContainer {
    margin: 0 auto;
    display: flex;
    flex-direction: row;
 }

 .question {
    text-align: center;
    margin: 0 auto;
    color: rgba(127, 255, 212, 0.733);; 
    font-size: 5.5rem;
    font-style: italic;
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    animation: fadeIn 5s;
    -webkit-animation: fadeIn ease 5s;
    padding-bottom: 20px;
    width: 825px;
 }

 .aboutContainer {
    margin: 0 auto;
    display: flexbox;
    width: 75%;
    border: 1.6px solid #eef2f548;
    height: 360px;
    border-radius: 10px;
    flex-direction: row;
 }

 .aboutText {
    font-size: .9rem;
    color: aquamarine;
    margin: 0 auto;
    text-align: center;
    font-style: oblique;
    position: relative;
    top: 237px;
    right: 290px;
    padding: 5px;
 }

 .aboutText1 {
    font-size: .9rem;
    color: aquamarine;
    margin: 0 auto;
    text-align: center;
    font-style: oblique;
    position: relative;
    top: 237px;
    right: 175px;
    padding: 5px;
 }

 .aboutText2 {
    font-size: .9rem;
    color: aquamarine;
    margin: 0 auto;
    text-align: center;
    font-style: oblique;
    position: relative;
    top: 237px;
    right: 47px;
    padding: 5px;
 }

 .iconContainer {
    margin: 0 auto;
    display: flex;
    flex-direction: row;
    position: relative;
    top: 95px;
 }

 .pirate {
   margin: 0 auto;
   display: flex;
   width: 110px;
   height: 110px;
   left: 105px;
   position: relative;
 }

 .merchant {
   margin: 0 auto;
   display: flex;
   height: 110px;
   width: 110px;
   left: 394px;
   position: relative;
 }

 .explorer {
   margin: 0 auto;
   display: flex;
   height: 110px;
   width: 110px;
   left: 719px;
   position: relative;
 }

 .rainbow {
   width: 700px;
   height: 300px;
   border-radius: 10px;
   padding: 2rem;
   margin: auto;
   display: grid;
   place-content: center;
   text-align: center;
   font-size: 1.5em;
   --border-size: 0.3rem;
   border: var(--border-size) solid transparent;
 
   /* Paint an image in the border */
   border-image: conic-gradient(
       from var(--angle),
       #63d0df 0deg 90deg,
       #63d0df 90deg 180deg,
       #8022ac 180deg 270deg,
       #8022ac 270deg 360deg
     )
     1 stretch;
   background: rgb(255 255 255 / var(--opacity));
 }
 
 /** show a warning in browers that don't support it **/
 .warning {
   margin: 2em;
   padding: 1em;
   border: 1px solid #ccc;
 }
 .warning p {
   margin: 0;
   padding: 0;
   text-align: center;
 }
 /* Animate when Houdini is available */
 @supports (background: paint(houdini)) {
   @property --opacity {
     syntax: "<number>";
     initial-value: 0.5;
     inherits: false;
   }
 
   @property --angle {
     syntax: "<angle>";
     initial-value: 0deg;
     inherits: false;
   }
 
   @keyframes opacityChange {
     to {
       --opacity: 0.65;
     }
   }
 
   @keyframes rotate {
     to {
       --angle: 360deg;
     }
   }
 
   .rainbow {
     animation: rotate 4s linear infinite, opacityChange 3s infinite alternate;
   }
 }